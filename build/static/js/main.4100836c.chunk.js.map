{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/GameTitle.js","components/hitAndBlow/Parts/GameCount.js","components/hitAndBlow/Parts/Judge.js","components/hitAndBlow/Parts/ImgList.js","components/hitAndBlow/Parts/History.js","components/hitAndBlow/HitAndBlow.js","components/blackjack/Card.js","components/blackjack/Score.js","components/blackjack/Result.js","components/blackjack/CustomButton.js","components/blackjack/GameCount.js","components/blackjack/PlayerTip.js","components/blackjack/BlackJack.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","GameTitle","gameTitle","GameCount","count","Judge","message","ImgList","imgList","isOnClick","array","map","number","key","width","size","height","src","History","historyRow","history","record","index","selected","hit","blow","reverse","HitAndBlow","correctAnswer","sixNumber","length","Math","floor","random","includes","push","generateSixNumber","choice","fourNumber","generateFourNumberFromSixNumber","console","log","i","slice","hitAndBlow","calcHit","blowOrHit","calcBlowOrHit","calcHitAndBlow","href","handleSubmitButton","handleClearButton","style","margin","handleImageClick","renderButton","Card","card","Score","playerName","playerScore","Result","resultMessage","CustomButton","buttonName","PlayerTip","tip","BlackJack","playerHand","dealerHand","deck","finalResultMessage","gameCount","playerTip","loading","cardData","isPlayer","shift","calcScore","dealCard","stateObject","dealerScore","judge","handleHitButton","handleStandButton","handleNextButton","renderHand","getCardDeck","trumpCard","j","r","tmp","hand","isAce","sum","n","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","rootElement","document","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4100836c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">ReactApp</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"panel panel-default\">\r\n                        <div className=\"panel-heading\">\r\n                            メニュー\r\n                        </div>\r\n                        <div className=\"list-group\">\r\n                            <Link to=\"/hit-and-blow\" className=\"list-group-item\">Hit&Blow</Link>\r\n                            <Link to=\"/blackjack\" className=\"list-group-item\">BlackJack</Link>\r\n                            <Link to=\"/othello-title\" className=\"list-group-item\">Othello</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport function GameTitle(props) {\r\n    return (\r\n        <h1>{props.gameTitle}</h1>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function GameCount(props) {\r\n    return (\r\n        <h2>{props.count}回目</h2>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function Judge(props) {\r\n    return (\r\n        <h2>{props.message}</h2>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function ImgList(props) {\r\n    let imgList;\r\n    if (props.isOnClick) {\r\n        imgList = props.array.map((number) => <img key={number} width={`${props.size}px`} height={`${props.size}px`} src={`img/${number}.png`} onClick={() => props.onClick(number)} />);\r\n    } else {\r\n        imgList = props.array.map((number) => <img key={number} width={`${props.size}px`} height={`${props.size}px`} src={`img/${number}.png`} />);\r\n    }\r\n\r\n    return (\r\n        <div>{imgList}</div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ImgList } from './ImgList';\r\n\r\nexport function History(props) {\r\n\r\n    let historyRow = props.history.map((record, index) =>\r\n        <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td><ImgList size={20} array={record.selected} /></td>\r\n            <td>{record.hit}</td>\r\n            <td>{record.blow}</td>\r\n        </tr>\r\n    );\r\n\r\n    historyRow.reverse();\r\n    return (\r\n        <div>\r\n            <h2>履歴</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>選択</th>\r\n                        <th>Hit</th>\r\n                        <th>Blow</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {historyRow}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { GameTitle } from '../GameTitle';\r\nimport { GameCount } from './Parts/GameCount';\r\nimport { Judge } from './Parts/Judge';\r\nimport { ImgList } from './Parts/ImgList';\r\nimport { History } from './Parts/History';\r\nimport { GameButton } from './Parts/GameButton';\r\n\r\nexport class HitAndBlow extends Component {\r\n    correctAnswer = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const sixNumber = generateSixNumber();\r\n        this.state = {\r\n            choice: sixNumber,\r\n            selected: [],\r\n            message: '',\r\n            history: []\r\n        }\r\n        this.correctAnswer = generateFourNumberFromSixNumber(sixNumber);\r\n        console.log(this.correctAnswer);\r\n    }\r\n\r\n    handleImageClick(i) {\r\n        let selected = this.state.selected.slice();\r\n\r\n        if (selected.length < 4 && !selected.includes(i)) {\r\n            selected.push(i);\r\n            this.setState({ selected: selected });\r\n        }\r\n    }\r\n\r\n    handleSubmitButton() {\r\n        const selected = this.state.selected.slice();\r\n\r\n        if (selected.length !== 4) {\r\n            return;\r\n        }\r\n\r\n        const hitAndBlow = calcHitAndBlow(selected, this.correctAnswer);\r\n        let history = this.state.history.slice();\r\n        const message = hitAndBlow.hit === 4 ? '正解' : 'もう1回！';\r\n\r\n        history.push({\r\n            selected: selected,\r\n            hit: hitAndBlow.hit,\r\n            blow: hitAndBlow.blow\r\n        });\r\n\r\n        this.setState({\r\n            history: history,\r\n            selected: [],\r\n            message: message\r\n        });\r\n\r\n    }\r\n\r\n    handleClearButton() {\r\n        this.setState({ selected: [] });\r\n    }\r\n\r\n    renderButton() {\r\n        const message = this.state.message;\r\n        if (message === '正解') {\r\n            return (\r\n                <div>\r\n                    <a className='btn btn-primary' href='/hit-and-blow'>リトライ</a>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <button className='btn btn-primary' onClick={() => this.handleSubmitButton()}>送信</button>\r\n                    <button className='btn' onClick={() => this.handleClearButton()}>クリア</button>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const choice = this.state.choice;\r\n        const selected = this.state.selected;\r\n        const message = this.state.message;\r\n\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-md-2'>\r\n                    <GameTitle gameTitle='Hit&Blow' />\r\n                    <GameCount count={history.length + 1} />\r\n                    <Judge message={message} />\r\n                </div>\r\n                <div className='col-md-6'>\r\n                    <div style={{ margin: 60 + 'px' }}>\r\n                        <div style={{ height: 70 + 'px' }}>\r\n                            <ImgList array={selected} size={70} isOnClick={false} />\r\n                        </div>\r\n                        <ImgList array={choice} size={70} onClick={(i) => this.handleImageClick(i)} isOnClick={true} />\r\n                        {this.renderButton()}\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <History history={history} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction generateSixNumber() {\r\n    let sixNumber = [];\r\n    const min = 1;\r\n    const max = 12;\r\n\r\n    while (sixNumber.length < 6) {\r\n        const number = Math.floor(Math.random() * (max + 1 - min)) + min;\r\n\r\n        if (!sixNumber.includes(number)) {\r\n            sixNumber.push(number);\r\n        }\r\n\r\n    }\r\n\r\n    return sixNumber;\r\n}\r\n\r\nfunction generateFourNumberFromSixNumber(sixNumber) {\r\n    let fourNumber = [];\r\n\r\n    while (fourNumber.length < 4) {\r\n        const number = Math.floor(Math.random() * sixNumber.length);\r\n\r\n        if (!fourNumber.includes(sixNumber[number])) {\r\n            fourNumber.push(sixNumber[number]);\r\n        }\r\n    }\r\n    return fourNumber;\r\n}\r\n\r\nfunction calcHitAndBlow(selected, correctAnswer) {\r\n    let hit = calcHit(selected, correctAnswer);\r\n    let blowOrHit = calcBlowOrHit(selected, correctAnswer);\r\n\r\n    return {\r\n        hit: hit,\r\n        blow: blowOrHit - hit\r\n    };\r\n}\r\n\r\nfunction calcHit(selected, correctAnswer) {\r\n    let hit = 0;\r\n\r\n    for (let i = 0; i < selected.length; i++) {\r\n        if (selected[i] === correctAnswer[i]) {\r\n            hit++;\r\n        }\r\n    }\r\n\r\n    return hit;\r\n}\r\n\r\nfunction calcBlowOrHit(selected, correctAnswer) {\r\n    let blowOrHit = 0;\r\n\r\n    for (let i of selected) {\r\n        if (correctAnswer.includes(i)) {\r\n            blowOrHit++;\r\n        }\r\n    }\r\n\r\n    return blowOrHit;\r\n}","import React, { Component } from 'react';\r\n\r\nexport function Card(props) {\r\n    return (\r\n        <img className='trump-image' src={`Trump/${props.card}.png`} />\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function Score(props) {\r\n    return (\r\n        <h4>{`${props.playerName}のスコア`}：{props.playerScore}</h4>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Score } from './Score.js';\r\n\r\nexport function Result(props) {\r\n    return (\r\n        <div>\r\n            <Score playerName='プレイヤー' playerScore={props.playerScore} />\r\n            <h3>{props.resultMessage}</h3>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function CustomButton(props) {\r\n    return (\r\n        <button className='btn btn-primary btn-custom' onClick={props.onClick}>{props.buttonName}</button>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function GameCount(props) {\r\n    return (\r\n        <h4>{`${props.count}回戦`}</h4>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function PlayerTip(props) {\r\n    return (\r\n        <h4>{`プレイヤーのチップ：${props.tip}`}</h4>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Card } from './Card.js';\r\nimport { Result } from './Result.js';\r\nimport { CustomButton } from './CustomButton';\r\nimport { GameCount } from './GameCount';\r\nimport { PlayerTip } from './PlayerTip';\r\nimport { GameTitle } from '../GameTitle';\r\n\r\nexport class BlackJack extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playerHand: [],\r\n            dealerHand: [],\r\n            deck: [],\r\n            resultMessage: '',\r\n            finalResultMessage: '',\r\n            gameCount: 1,\r\n            playerTip: 50,\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.cardData();\r\n    }\r\n\r\n    dealCard(isPlayer) {\r\n        let deck = this.state.deck.slice();\r\n        let playerHand = this.state.playerHand.slice();\r\n        let dealerHand = this.state.dealerHand.slice();\r\n\r\n        if (isPlayer) {\r\n            playerHand.push(deck[0]);\r\n        } else {\r\n            dealerHand.push(deck[0]);\r\n        }\r\n\r\n        deck.shift();\r\n\r\n        return {\r\n            deck: deck,\r\n            playerHand: playerHand,\r\n            dealerHand: dealerHand\r\n        };\r\n\r\n    }\r\n\r\n    renderHand(isPlayer) {\r\n        const hand = isPlayer ? this.state.playerHand : this.state.dealerHand;\r\n        return hand.map((card, index) =>\r\n            !isPlayer && index === 0 && !this.state.resultMessage ? <Card key={index} card='card_back' /> : <Card key={index} card={card} />\r\n        );\r\n    }\r\n\r\n\r\n\r\n    handleHitButton() {\r\n        if (calcScore(this.state.playerHand) >= 21) {\r\n            return;\r\n        }\r\n\r\n        this.setState(this.dealCard(true));\r\n    }\r\n\r\n    handleStandButton() {\r\n        if (this.state.resultMessage) {\r\n            return;\r\n        }\r\n\r\n        let dealerScore = calcScore(this.state.dealerHand);\r\n        let stateObject;\r\n        while (dealerScore < 17) {\r\n            stateObject = this.dealCard(false);\r\n\r\n            this.state.deck = stateObject.deck;\r\n            this.state.playerHand = stateObject.playerHand;\r\n            this.state.dealerHand = stateObject.dealerHand;\r\n\r\n            dealerScore = calcScore(this.state.dealerHand);\r\n        }\r\n\r\n        if (stateObject) {\r\n            this.setState(stateObject);\r\n        }\r\n\r\n        this.judge();\r\n    }\r\n\r\n    judge() {\r\n        const playerScore = calcScore(this.state.playerHand);\r\n        const dealerScore = calcScore(this.state.dealerHand);\r\n        let playerTip = this.state.playerTip;\r\n\r\n        let resultMessage;\r\n\r\n        if (playerScore <= 21 && (playerScore > dealerScore || dealerScore > 21)) {\r\n            playerTip += 10;\r\n            resultMessage = 'プレイヤーの勝ち';\r\n        } else if (playerScore <= 21 && playerScore == dealerScore) {\r\n            resultMessage = '引き分け'\r\n        } else {\r\n            playerTip -= 10;\r\n            resultMessage = 'プレイヤーの負け';\r\n        }\r\n        this.setState({\r\n            playerTip: playerTip,\r\n            resultMessage: resultMessage\r\n        });\r\n    }\r\n\r\n    handleNextButton() {\r\n        if (this.state.gameCount >= 5) {\r\n            if (this.state.playerTip > 50) {\r\n                this.setState({ finalResultMessage: 'プレイヤーの勝ち' });\r\n            } else if (this.state.playerTip === 50) {\r\n                this.setState({ finalResultMessage: '引き分け' });\r\n            } else {\r\n                this.setState({ finalResultMessage: 'プレイヤーの負け' });\r\n            }\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.state.resultMessage) {\r\n            let gameCount = this.state.gameCount;\r\n            gameCount++;\r\n            this.setState({ gameCount: gameCount });\r\n\r\n            this.cardData();\r\n        }\r\n    }\r\n\r\n    renderButton() {\r\n        if (calcScore(this.state.playerHand) < 21 && !this.state.resultMessage) {\r\n            return (\r\n                <div className='text-center'>\r\n                    <CustomButton onClick={() => this.handleHitButton()} buttonName='Hit' />\r\n                    <CustomButton onClick={() => this.handleStandButton()} buttonName='Stand' />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!this.state.resultMessage) {\r\n            return (\r\n                <div className='text-center'>\r\n                    <CustomButton onClick={() => this.handleStandButton()} buttonName='Stand' />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.resultMessage) {\r\n            return (\r\n                <div className='text-center'>\r\n                    <CustomButton onClick={() => this.handleNextButton()} buttonName='次へ' />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return (\r\n                <p><em>Loading...</em></p>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className='row'>\r\n                    <div className='col-3'>\r\n                        <GameTitle gameTitle='BlackJack'/>\r\n                        <GameCount count={this.state.gameCount} />\r\n                        <PlayerTip tip={this.state.playerTip} />\r\n                        <h2>{this.state.finalResultMessage}</h2>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <div className='text-center'>\r\n                            {this.renderHand(false)}\r\n                        </div>\r\n                        <div className='text-center'>\r\n                            <Card card='card_back' />\r\n                        </div>\r\n                        <div className='text-center'>\r\n                            {this.renderHand(true)}\r\n                        </div>\r\n                        {this.renderButton()}\r\n                    </div>\r\n                    <div className='col-3'>\r\n                        <Result playerScore={calcScore(this.state.playerHand)} dealerScore={calcScore(this.state.dealerHand)} resultMessage={this.state.resultMessage} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n    cardData() {\r\n        this.state= {\r\n            playerHand: [],\r\n            dealerHand: [],\r\n            deck: this.getCardDeck(),\r\n            resultMessage: ''\r\n        };\r\n\r\n        this.setState(this.dealCard(false));\r\n        this.setState(this.dealCard(false));\r\n\r\n        this.setState(this.dealCard(true));\r\n        this.setState(this.dealCard(true));\r\n        this.setState({ loading:false });\r\n    }\r\n\r\n    getCardDeck() {\r\n        let trumpCard = [];\r\n        for (let i = 1; i <= 4; i++)\r\n        {\r\n            for (let j = 1; j <= 13; j++)\r\n            {\r\n                trumpCard.push(i * 100 + j);\r\n            }\r\n        }\r\n\r\n        for(let i = trumpCard.length - 1; i > 0; i--){\r\n            let r = Math.floor(Math.random() * (i + 1));\r\n            let tmp = trumpCard[i];\r\n            trumpCard[i] = trumpCard[r];\r\n            trumpCard[r] = tmp;\r\n        }\r\n        return trumpCard;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction calcScore(hand) {\r\n    let isAce = false;\r\n    let sum = 0;\r\n    for (let i = 0; i < hand.length; i++) {\r\n        let n = hand[i];\r\n\r\n        if (n % 100 >= 10) {\r\n            sum += 10;\r\n        } else if (n % 100 === 1) {\r\n            isAce = true;\r\n            sum += 1;\r\n        } else {\r\n            sum += n % 100;\r\n        }\r\n    }\r\n\r\n    if (isAce) {\r\n        if (sum + 10 <= 21) {\r\n            return sum + 10;\r\n        }\r\n    }\r\n\r\n    return sum;\r\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport { Layout } from './components/Layout';\nimport { Home } from './components/Home';\nimport { HitAndBlow } from './components/hitAndBlow/HitAndBlow';\nimport { BlackJack } from './components/blackjack/BlackJack';\nimport './custom.css'\n\nexport default class App extends Component {\n    static displayName = App.name;\n\n    render() {\n        return (\n            <Layout>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/hit-and-blow' component={HitAndBlow} />\n                <Route exact path='/blackjack' component={BlackJack} />\n            </Layout>\n        );\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n//const baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst baseUrl = 'web/build';\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n"],"sourceRoot":""}