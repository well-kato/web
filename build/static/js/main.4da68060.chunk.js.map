{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/hitAndBlow/GameTitle.js","components/hitAndBlow/Parts/GameCount.js","components/hitAndBlow/Parts/Judge.js","components/hitAndBlow/Parts/ImgList.js","components/hitAndBlow/Parts/History.js","components/hitAndBlow/Parts/GameButton.js","components/hitAndBlow/HitAndBlow.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","GameTitle","gameTitle","GameCount","count","Judge","message","ImgList","imgList","isOnClick","array","map","number","key","width","size","height","src","History","historyRow","history","record","index","selected","hit","blow","GameButton","buttonName","HitAndBlow","correctAnswer","sixNumber","length","Math","floor","random","includes","push","generateSixNumber","choice","fourNumber","generateFourNumberFromSixNumber","i","slice","handleImageClick","handleSubmitButton","handleClearButton","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","rootElement","document","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4da68060.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">ReactApp</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"panel panel-default\">\r\n                        <div className=\"panel-heading\">\r\n                            メニュー\r\n                        </div>\r\n                        <div className=\"list-group\">\r\n                            <Link to=\"/hit-and-blow\" className=\"list-group-item\">Hit&Blow</Link>\r\n                            <Link to=\"/blackjack\" className=\"list-group-item\">BlackJack</Link>\r\n                            <Link to=\"/othello-title\" className=\"list-group-item\">Othello</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport function GameTitle(props) {\r\n    return (\r\n        <h1>{props.gameTitle}</h1>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function GameCount(props) {\r\n    return (\r\n        <h2>{props.count}回目</h2>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function Judge(props) {\r\n    return (\r\n        <h2>{props.message}</h2>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function ImgList(props) {\r\n    let imgList;\r\n    if (props.isOnClick) {\r\n        imgList = props.array.map((number) => <img key={number} width={`${props.size}px`} height={`${props.size}px`} src={`/img/${number}.png`} onClick={() => props.onClick(number)} />);\r\n    } else {\r\n        imgList = props.array.map((number) => <img key={number} width={`${props.size}px`} height={`${props.size}px`} src={`/img/${number}.png`} />);\r\n    }\r\n\r\n    return (\r\n        <div>{imgList}</div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { ImgList } from './ImgList';\r\n\r\nexport function History(props) {\r\n\r\n    const historyRow = props.history.map((record, index) =>\r\n        <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td><ImgList size={35} array={record.selected} /></td>\r\n            <td>{record.hit}</td>\r\n            <td>{record.blow}</td>\r\n        </tr>\r\n    );\r\n    return (\r\n        <div>\r\n            <h2>履歴</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>No</th>\r\n                        <th>選択</th>\r\n                        <th>Hit</th>\r\n                        <th>Blow</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {historyRow}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\n\r\nexport function GameButton(props) {\r\n    return (\r\n        <button className='btn btn-primary' onClick={props.onClick}>{props.buttonName}</button>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { GameTitle } from './GameTitle';\r\nimport { GameCount } from './Parts/GameCount';\r\nimport { Judge } from './Parts/Judge';\r\nimport { ImgList } from './Parts/ImgList';\r\nimport { History } from './Parts/History';\r\nimport { GameButton } from './Parts/GameButton';\r\n\r\nexport class HitAndBlow extends Component {\r\n    correctAnswer = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const sixNumber = generateSixNumber();\r\n        this.state = {\r\n            choice: sixNumber,\r\n            selected: [],\r\n            history: []\r\n        }\r\n        this.correctAnswer = generateFourNumberFromSixNumber(sixNumber);\r\n    }\r\n\r\n    handleImageClick(i) {\r\n        let selected = this.state.selected.slice();\r\n\r\n        if (selected.length < 4 && !selected.includes(i)) {\r\n            selected.push(i);\r\n            this.setState({ selected: selected });\r\n        }\r\n    }\r\n\r\n    handleSubmitButton() {\r\n        const selected = this.state.selected.slice();\r\n\r\n        if (selected.length === 4) {\r\n            this.setState({ selected: [] });\r\n        }\r\n    }\r\n\r\n    handleClearButton() {\r\n        this.setState({ selected: [] });\r\n    }\r\n\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const choice = this.state.choice;\r\n        const selected = this.state.selected;\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-3'>\r\n                    <GameTitle gameTitle='Hit&Blow' />\r\n                    <GameCount count={history.length} />\r\n                    <Judge message='正解' />\r\n                </div>\r\n                <div className='col-6'>\r\n                    <ImgList array={selected} size={70} isOnClick={false} />\r\n                    <ImgList array={choice} size={70} onClick={(i) => this.handleImageClick(i)} isOnClick={true} />\r\n                    <GameButton onClick={() => this.handleSubmitButton()} buttonName='送信' />\r\n                    <GameButton onClick={() => this.handleClearButton()} buttonName='クリア' />\r\n                </div>\r\n                <div className='col-3'>\r\n                    <History history={history} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction generateSixNumber() {\r\n    let sixNumber = [];\r\n    const min = 1;\r\n    const max = 12;\r\n\r\n    while (sixNumber.length < 6) {\r\n        const number = Math.floor(Math.random() * (max + 1 - min)) + min;\r\n\r\n        if (!sixNumber.includes(number)) {\r\n            sixNumber.push(number);\r\n        }\r\n\r\n    }\r\n\r\n    return sixNumber;\r\n}\r\n\r\nfunction generateFourNumberFromSixNumber(sixNumber) {\r\n    let fourNumber = [];\r\n\r\n    while (fourNumber.length < 4) {\r\n        const number = Math.floor(Math.random() * sixNumber.length);\r\n\r\n        if (!fourNumber.includes(sixNumber[number])) {\r\n            fourNumber.push(sixNumber[number]);\r\n        }\r\n    }\r\n    return fourNumber;\r\n}","import React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport { Layout } from './components/Layout';\nimport { Home } from './components/Home';\nimport { HitAndBlow } from './components/hitAndBlow/HitAndBlow';\nimport './custom.css'\n\nexport default class App extends Component {\n    static displayName = App.name;\n\n    render() {\n        return (\n            <Layout>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/hit-and-blow' component={HitAndBlow} />\n            </Layout>\n        );\n    }\n}\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n//const baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst baseUrl = 'web/build';\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n"],"sourceRoot":""}